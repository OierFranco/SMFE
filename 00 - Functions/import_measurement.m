function [Measurement] = import_measurement (Filename,Manual)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Optimal cutting condition selection for high quality receptance         
% measurements by Sweep Milling Force Excitation
% 
% Authors: Oier Franco, Xavier Beudaert, Alex Iglesias, Zoltan Dombovari,
%          Kaan Erkorkmaz, Jokin Munoa. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% This function allows to import experimental measurements from a dSPACE 
% struct
%
% INPUT:
% - Filename: The whole name of the .mat generated by the dSPACE. This 
%             measurement should be saved in 02- data folder
%
% - Manual: There is the option to use the Filename to load the measurement
%           directly or to search the measurement manually. 
%           Manual = True --> directly with the Filename
%           Manual = False--> search of the file
%
% OUTPUT:
% - Meaurement: Measurement is the structure generated from the dSPACE
%               measurement. 

%% Get CD_measurement_file       

    if Manual
        
        temp = load(Filename);
        CD_measurement_file=eval(char(strcat('temp.',fieldnames(temp))));
        
    else
        
        [Filename,PathName] = uigetfile('*.mat','Select the ControlDesk measurement file');
        
        if Filename~=0
            Expath=[PathName Filename];
            temp=load(Expath);
            CD_measurement_file=eval(char(strcat('temp.',fieldnames(temp))));
        end
        
    end
%% Get specific values from CD_measurement_file    
    
    time = CD_measurement_file.X.Data(1,:);
    Signal_number = length(CD_measurement_file.Y);
    PathName = cell(Signal_number,1);
    
    for i = 1:Signal_number
        
        % Signals 
        Signal(i,:) =  CD_measurement_file.Y(i).Data(1,:); 

        % Paths
        PathName{i} = CD_measurement_file.Y(i).Path;
    
        % Get names from the path
        Name{i,1} = regexprep(PathName{i}, 'Model Root/', '');
        
    end
     
%% Measurement structure generation
    
    formatOut = 'mm/dd/yyyy HH:MM:SS';
    Measurement.Names           = Name;
    Measurement.Signals         = Signal;
    Measurement.Time            = time;
    Measurement.Filename        = strcat(Filename, '.mat');
    Measurement.RecordingDate   = CD_measurement_file.Description.General.DateTime;
    Measurement.GenerationDate  = datestr(datetime('now'), formatOut);
   
   
end 